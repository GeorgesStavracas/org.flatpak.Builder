From 737e38d1a7cb808e5ac1a80dacb1f2002fe16c84 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bart=C5=82omiej=20Piotrowski?= <b@bpiotrowski.pl>
Date: Fri, 2 Sep 2022 09:56:29 +0200
Subject: [PATCH 2/6] Move padding and size checks to validate-strict

---
 libappstream-glib/as-app-validate.c | 120 +++++++++++++++-------------
 1 file changed, 64 insertions(+), 56 deletions(-)

diff --git a/libappstream-glib/as-app-validate.c b/libappstream-glib/as-app-validate.c
index 551dade..0fd4628 100644
--- a/libappstream-glib/as-app-validate.c
+++ b/libappstream-glib/as-app-validate.c
@@ -445,10 +445,14 @@ ai_app_validate_image_check (AsImage *im, AsAppValidateHelper *helper)
 	g_autoptr(GByteArray) buf = g_byte_array_new();
 	g_autoptr(GError) error_proxy = NULL;
 	g_autoptr(GInputStream) stream = NULL;
+	gboolean require_size = FALSE;
+	gboolean check_padding = FALSE;
 
 	/* make the requirements more strict */
 	if ((helper->flags & AS_APP_VALIDATE_FLAG_STRICT) > 0) {
 		require_correct_aspect_ratio = TRUE;
+		require_size = TRUE;
+		check_padding = TRUE;
 	}
 
 	/* relax the requirements a bit */
@@ -527,67 +531,71 @@ ai_app_validate_image_check (AsImage *im, AsAppValidateHelper *helper)
 	}
 
 	/* check width matches */
-	screenshot_width = (guint) gdk_pixbuf_get_width (pixbuf);
-	screenshot_height = (guint) gdk_pixbuf_get_height (pixbuf);
-	if (as_image_get_width (im) != 0 &&
-	    as_image_get_width (im) != screenshot_width) {
-		ai_app_validate_add (helper,
-				     AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
-				     "<screenshot> width (%u) did not match specified (%u) [%s]",
-				     as_image_get_width (im), screenshot_width, url);
-	}
+	if (require_size) {
+		screenshot_width = (guint) gdk_pixbuf_get_width (pixbuf);
+		screenshot_height = (guint) gdk_pixbuf_get_height (pixbuf);
+		if (as_image_get_width (im) != 0 &&
+		as_image_get_width (im) != screenshot_width) {
+			ai_app_validate_add (helper,
+					AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
+					"<screenshot> width (%u) did not match specified (%u) [%s]",
+					as_image_get_width (im), screenshot_width, url);
+		}
 
-	/* check height matches */
-	if (as_image_get_height (im) != 0 &&
-	    as_image_get_height (im) != screenshot_height) {
-		ai_app_validate_add (helper,
-				     AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
-				     "<screenshot> height (%u) did not match specified (%u) [%s]",
-				     as_image_get_height (im), screenshot_height, url);
-	}
+		/* check height matches */
+		if (as_image_get_height (im) != 0 &&
+		as_image_get_height (im) != screenshot_height) {
+			ai_app_validate_add (helper,
+					AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
+					"<screenshot> height (%u) did not match specified (%u) [%s]",
+					as_image_get_height (im), screenshot_height, url);
+		}
 
-	/* check size is reasonable */
-	if (screenshot_width < ss_size_width_min) {
-		ai_app_validate_add (helper,
-				     AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
-				     "<screenshot> width (%u) too small [%s] minimum is %upx",
-				     screenshot_width, url, ss_size_width_min);
-	}
-	if (screenshot_height < ss_size_height_min) {
-		ai_app_validate_add (helper,
-				     AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
-				     "<screenshot> height too small [%s] minimum is %upx",
-				     url, ss_size_height_min);
-	}
-	if (screenshot_width > ss_size_width_max) {
-		ai_app_validate_add (helper,
-				     AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
-				     "<screenshot> width too large [%s] maximum is %upx",
-				     url, ss_size_width_max);
-	}
-	if (screenshot_height > ss_size_height_max) {
-		ai_app_validate_add (helper,
-				     AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
-				     "<screenshot> height too large [%s] maximum is %upx",
-				     url, ss_size_height_max);
+		/* check size is reasonable */
+		if (screenshot_width < ss_size_width_min) {
+			ai_app_validate_add (helper,
+					AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
+					"<screenshot> width (%u) too small [%s] minimum is %upx",
+					screenshot_width, url, ss_size_width_min);
+		}
+		if (screenshot_height < ss_size_height_min) {
+			ai_app_validate_add (helper,
+					AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
+					"<screenshot> height too small [%s] minimum is %upx",
+					url, ss_size_height_min);
+		}
+		if (screenshot_width > ss_size_width_max) {
+			ai_app_validate_add (helper,
+					AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
+					"<screenshot> width too large [%s] maximum is %upx",
+					url, ss_size_width_max);
+		}
+		if (screenshot_height > ss_size_height_max) {
+			ai_app_validate_add (helper,
+					AS_PROBLEM_KIND_ATTRIBUTE_INVALID,
+					"<screenshot> height too large [%s] maximum is %upx",
+					url, ss_size_height_max);
+		}
 	}
 
 	/* check padding */
-	as_image_set_pixbuf (im, pixbuf);
-	alpha_flags = as_image_get_alpha_flags (im);
-	if ((alpha_flags & AS_IMAGE_ALPHA_FLAG_TOP) > 0||
-	    (alpha_flags & AS_IMAGE_ALPHA_FLAG_BOTTOM) > 0) {
-		ai_app_validate_add (helper,
-				     AS_PROBLEM_KIND_STYLE_INCORRECT,
-				     "<image> has vertical padding [%s]",
-				     url);
-	}
-	if ((alpha_flags & AS_IMAGE_ALPHA_FLAG_LEFT) > 0||
-	    (alpha_flags & AS_IMAGE_ALPHA_FLAG_RIGHT) > 0) {
-		ai_app_validate_add (helper,
-				     AS_PROBLEM_KIND_STYLE_INCORRECT,
-				     "<image> has horizontal padding [%s]",
-				     url);
+	if (check_padding) {
+		as_image_set_pixbuf (im, pixbuf);
+		alpha_flags = as_image_get_alpha_flags (im);
+		if ((alpha_flags & AS_IMAGE_ALPHA_FLAG_TOP) > 0||
+		(alpha_flags & AS_IMAGE_ALPHA_FLAG_BOTTOM) > 0) {
+			ai_app_validate_add (helper,
+					AS_PROBLEM_KIND_STYLE_INCORRECT,
+					"<image> has vertical padding [%s]",
+					url);
+		}
+		if ((alpha_flags & AS_IMAGE_ALPHA_FLAG_LEFT) > 0||
+		(alpha_flags & AS_IMAGE_ALPHA_FLAG_RIGHT) > 0) {
+			ai_app_validate_add (helper,
+					AS_PROBLEM_KIND_STYLE_INCORRECT,
+					"<image> has horizontal padding [%s]",
+					url);
+		}
 	}
 
 	/* check aspect ratio */
diff --git a/client/as-util.c b/client/as-util.c
index ce973ed..937440f 100644
--- a/client/as-util.c
+++ b/client/as-util.c
@@ -3313,19 +3313,6 @@ as_util_mirror_screenshots_app_file (AsApp *app,
 		g_debug ("%s is not in 16:9 aspect ratio", filename_no_path);
 	}
 
-	/* check screenshot is reasonable in size */
-	if (as_image_get_width (im_src) * 2 < AS_IMAGE_NORMAL_WIDTH ||
-	    as_image_get_height (im_src) * 2 < AS_IMAGE_NORMAL_HEIGHT) {
-		g_set_error (error,
-			     AS_APP_ERROR,
-			     AS_APP_ERROR_FAILED,
-			     "%s is too small to be used: %ux%u",
-			     filename_no_path,
-			     as_image_get_width (im_src),
-			     as_image_get_height (im_src));
-		return FALSE;
-	}
-
 	/* check the image is not padded */
 	alpha_flags = as_image_get_alpha_flags (im_src);
 	if ((alpha_flags & AS_IMAGE_ALPHA_FLAG_TOP) > 0||
